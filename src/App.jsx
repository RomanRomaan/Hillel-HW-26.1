import React, { useEffect, useState } from "react";
import "./App.css";

const EMOJIS = ["üòÉ", "üòä", "üòé", "ü§©", "üòç"];
const LS_KEY = "emoji-votes-v1";

function App() {
    // 1) –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ç–∞–Ω –∑ localStorage (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ)
    const [votes, setVotes] = useState(() => {
        try {
            const raw = localStorage.getItem(LS_KEY);
            if (raw) {
                const saved = JSON.parse(raw);
                const valid =
                    Array.isArray(saved) &&
                    saved.length === EMOJIS.length &&
                    saved.every(
                        (it, i) =>
                            it &&
                            typeof it.emoji === "string" &&
                            it.emoji === EMOJIS[i] &&
                            Number.isFinite(it.count) &&
                            it.count >= 0
                    );
                if (valid) return saved;
            }
        } catch { }
        return EMOJIS.map((e) => ({ emoji: e, count: 0 }));
    });

    // 2) winnerIdx –ø–æ–∫–∞–∑—É—î–º–æ –ª–∏—à–µ –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
    const [winnerIdx, setWinnerIdx] = useState(null);

    // 3) –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è —É localStorage
    useEffect(() => {
        try {
            localStorage.setItem(LS_KEY, JSON.stringify(votes));
        } catch { }
    }, [votes]);

    // 4) –ì–æ–ª–æ—Å
    const handleVote = (idx) => {
        setVotes((prev) =>
            prev.map((v, i) => (i === idx ? { ...v, count: v.count + 1 } : v))
        );
    };

    // 5) –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç—ñ–ª—å–∫–∏ –∑–∞ –∑–∞–ø–∏—Ç–æ–º
    const showResults = () => {
        const total = votes.reduce((s, v) => s + v.count, 0);
        if (total === 0) {
            setWinnerIdx(null);
            return;
        }
        const max = Math.max(...votes.map((v) => v.count));
        const idx = votes.findIndex((v) => v.count === max);
        setWinnerIdx(idx);
    };

    // 6) –°–∫–∏–¥–∞–Ω–Ω—è
    const clearResults = () => {
        setVotes(EMOJIS.map((e) => ({ emoji: e, count: 0 })));
        setWinnerIdx(null);
        try {
            localStorage.removeItem(LS_KEY);
        } catch { }
    };

    const total = votes.reduce((s, v) => s + v.count, 0);
    const winner = winnerIdx !== null ? votes[winnerIdx] : null;

    return (
        <div className="page">
            <h1 className="title">–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–º–∞–π–ª–∏–∫</h1>

            <div className="row">
                {votes.map((item, i) => (
                    <div key={item.emoji} className="emojiCol">
                        <button
                            type="button"
                            onClick={() => handleVote(i)}
                            className="emojiBtn"
                            aria-label={`–ì–æ–ª–æ—Å—É–≤–∞—Ç–∏ –∑–∞ ${item.emoji}`}
                            title="–ù–∞—Ç–∏—Å–Ω–∏, —â–æ–± –ø—Ä–æ–≥–æ–ª–æ—Å—É–≤–∞—Ç–∏"
                        >
                            <span className="emoji">{item.emoji}</span>
                        </button>
                        <div className="count">{item.count}</div>
                    </div>
                ))}
            </div>

            <div className="actions">
                <button type="button" onClick={showResults} className="primary">
                    Show Results
                </button>
                <button type="button" onClick={clearResults} className="danger">
                    –û—á–∏—Å—Ç–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
                </button>
            </div>

            <div className="results">
                <h2 className="subtitle">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è:</h2>
                {winner ? (
                    <div className="resultsInner">
                        <div className="label">–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å:</div>
                        <div className="winnerEmoji">{winner.emoji}</div>
                        <div className="smallNote">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–ª–æ—Å—ñ–≤: {winner.count}</div>
                        <div className="smallNote">–í—Å—å–æ–≥–æ –≥–æ–ª–æ—Å—ñ–≤: {total}</div>
                    </div>
                ) : (
                    <div className="smallNote">–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å ¬´Show Results¬ª</div>
                )}
            </div>
        </div>
    );
}

export default App;
